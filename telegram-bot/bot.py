import asyncio
import logging
import os
from typing import Any, Dict

from aiogram import Bot, Dispatcher, Router, F
from aiogram.types import (
    Message, InlineKeyboardMarkup, InlineKeyboardButton, 
    WebAppInfo, MenuButtonWebApp
)
from aiogram.filters import Command, CommandStart
from aiogram.fsm.context import FSMContext
from aiogram.fsm.state import State, StatesGroup
from aiogram.enums import ParseMode

# –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏—è
logging.basicConfig(
    level=logging.INFO,
    format="%(asctime)s - %(name)s - %(levelname)s - %(message)s"
)
logger = logging.getLogger(__name__)

# –ü–æ–ª—É—á–∞–µ–º –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –æ–∫—Ä—É–∂–µ–Ω–∏—è
BOT_TOKEN = os.getenv("TELEGRAM_BOT_TOKEN", "")
WEBAPP_URL = os.getenv("WEBAPP_URL", "http://localhost:3000")

if not BOT_TOKEN:
    raise ValueError("TELEGRAM_BOT_TOKEN environment variable is required")

# –°–æ–∑–¥–∞–µ–º –±–æ—Ç–∞ –∏ –¥–∏—Å–ø–µ—Ç—á–µ—Ä
bot = Bot(token=BOT_TOKEN, parse_mode=ParseMode.HTML)
dp = Dispatcher()
router = Router()

class BotStates(StatesGroup):
    """–°–æ—Å—Ç–æ—è–Ω–∏—è –±–æ—Ç–∞"""
    waiting_for_command = State()

def create_main_keyboard() -> InlineKeyboardMarkup:
    """–°–æ–∑–¥–∞—Ç—å –≥–ª–∞–≤–Ω—É—é –∫–ª–∞–≤–∏–∞—Ç—É—Ä—É —Å WebApp"""
    keyboard = InlineKeyboardMarkup(
        inline_keyboard=[
            [
                InlineKeyboardButton(
                    text="üöÄ –û—Ç–∫—Ä—ã—Ç—å OnlineSim",
                    web_app=WebAppInfo(url=WEBAPP_URL)
                )
            ],
            [
                InlineKeyboardButton(
                    text="‚ÑπÔ∏è –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è",
                    callback_data="info"
                ),
                InlineKeyboardButton(
                    text="üí¨ –ü–æ–¥–¥–µ—Ä–∂–∫–∞",
                    callback_data="support"
                )
            ],
            [
                InlineKeyboardButton(
                    text="üì¢ –ö–∞–Ω–∞–ª —Å –Ω–æ–≤–æ—Å—Ç—è–º–∏",
                    url="https://t.me/onlinesim_channel"
                )
            ]
        ]
    )
    return keyboard

def create_info_keyboard() -> InlineKeyboardMarkup:
    """–°–æ–∑–¥–∞—Ç—å –∫–ª–∞–≤–∏–∞—Ç—É—Ä—É –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏"""
    keyboard = InlineKeyboardMarkup(
        inline_keyboard=[
            [
                InlineKeyboardButton(
                    text="üì± –ö–∞–∫ –ø–æ–ª—É—á–∏—Ç—å –Ω–æ–º–µ—Ä?",
                    callback_data="how_to_use"
                )
            ],
            [
                InlineKeyboardButton(
                    text="üí∞ –¶–µ–Ω—ã",
                    callback_data="prices"
                ),
                InlineKeyboardButton(
                    text="üåç –°—Ç—Ä–∞–Ω—ã", 
                    callback_data="countries"
                )
            ],
            [
                InlineKeyboardButton(
                    text="üîô –ù–∞–∑–∞–¥",
                    callback_data="back_to_main"
                )
            ]
        ]
    )
    return keyboard

@router.message(CommandStart())
async def start_handler(message: Message, state: FSMContext) -> None:
    """–û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–æ–º–∞–Ω–¥—ã /start"""
    user = message.from_user
    
    # –ü–æ–ª—É—á–∞–µ–º start –ø–∞—Ä–∞–º–µ—Ç—Ä
    start_param = message.text.split()[1] if len(message.text.split()) > 1 else None
    
    logger.info(f"User {user.id} (@{user.username}) started bot with param: {start_param}")
    
    welcome_text = f"""
üéâ <b>–î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –≤ OnlineSim!</b>

–ü—Ä–∏–≤–µ—Ç, <b>{user.first_name}</b>! 

–Ø –ø–æ–º–æ–≥—É –≤–∞–º –ø–æ–ª—É—á–∏—Ç—å –≤—Ä–µ–º–µ–Ω–Ω—ã–µ –Ω–æ–º–µ—Ä–∞ —Ç–µ–ª–µ—Ñ–æ–Ω–æ–≤ –¥–ª—è —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏ –≤ —Ä–∞–∑–ª–∏—á–Ω—ã—Ö —Å–µ—Ä–≤–∏—Å–∞—Ö:

üì± <b>Telegram, WhatsApp, Discord</b> –∏ –º–Ω–æ–≥–∏–µ –¥—Ä—É–≥–∏–µ
üåç –ù–æ–º–µ—Ä–∞ –∏–∑ <b>–†–æ—Å—Å–∏–∏, –£–∫—Ä–∞–∏–Ω—ã, –ö–∞–∑–∞—Ö—Å—Ç–∞–Ω–∞</b> –∏ –¥—Ä—É–≥–∏—Ö —Å—Ç—Ä–∞–Ω
‚ö° <b>–ë—ã—Å—Ç—Ä–æ</b> –∏ <b>–Ω–∞–¥–µ–∂–Ω–æ</b>
üí∞ –ù–∏–∑–∫–∏–µ —Ü–µ–Ω—ã –æ—Ç <b>15‚ÇΩ</b>

–ù–∞–∂–º–∏—Ç–µ –∫–Ω–æ–ø–∫—É –Ω–∏–∂–µ, —á—Ç–æ–±—ã –Ω–∞—á–∞—Ç—å –ø–æ–ª—å–∑–æ–≤–∞—Ç—å—Å—è —Å–µ—Ä–≤–∏—Å–æ–º!
    """
    
    await message.answer(
        welcome_text,
        reply_markup=create_main_keyboard()
    )
    
    # –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –∫–Ω–æ–ø–∫—É –º–µ–Ω—é WebApp
    await bot.set_chat_menu_button(
        chat_id=message.chat.id,
        menu_button=MenuButtonWebApp(
            text="OnlineSim",
            web_app=WebAppInfo(url=WEBAPP_URL)
        )
    )

@router.message(Command("help"))
async def help_handler(message: Message) -> None:
    """–û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–æ–º–∞–Ω–¥—ã /help"""
    help_text = """
üÜò <b>–ü–æ–º–æ—â—å –ø–æ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—é OnlineSim</b>

<b>–î–æ—Å—Ç—É–ø–Ω—ã–µ –∫–æ–º–∞–Ω–¥—ã:</b>
/start - –ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é
/help - –≠—Ç–∞ —Å–ø—Ä–∞–≤–∫–∞
/support - –¢–µ—Ö–ø–æ–¥–¥–µ—Ä–∂–∫–∞

<b>–ö–∞–∫ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å:</b>
1Ô∏è‚É£ –ù–∞–∂–º–∏—Ç–µ –∫–Ω–æ–ø–∫—É "–û—Ç–∫—Ä—ã—Ç—å OnlineSim"
2Ô∏è‚É£ –í—ã–±–µ—Ä–∏—Ç–µ —Å—Ç—Ä–∞–Ω—É –∏ —Å–µ—Ä–≤–∏—Å
3Ô∏è‚É£ –û–ø–ª–∞—Ç–∏—Ç–µ –∑–∞–∫–∞–∑
4Ô∏è‚É£ –ü–æ–ª—É—á–∏—Ç–µ –Ω–æ–º–µ—Ä –∏ –∂–¥–∏—Ç–µ SMS
5Ô∏è‚É£ –ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ –ø–æ–ª—É—á–µ–Ω–Ω—ã–π –∫–æ–¥

<b>–í—Ä–µ–º—è –æ–∂–∏–¥–∞–Ω–∏—è SMS:</b> –¥–æ 15 –º–∏–Ω—É—Ç
<b>–ü—Ä–∏ –Ω–µ–ø–æ–ª—É—á–µ–Ω–∏–∏:</b> –¥–µ–Ω—å–≥–∏ –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ –≤–æ–∑–≤—Ä–∞—â–∞—é—Ç—Å—è

–ù—É–∂–Ω–∞ –ø–æ–º–æ—â—å? –û–±—Ä–∞—â–∞–π—Ç–µ—Å—å –≤ –ø–æ–¥–¥–µ—Ä–∂–∫—É! üëá
    """
    
    await message.answer(
        help_text,
        reply_markup=create_main_keyboard()
    )

@router.message(Command("support"))
async def support_handler(message: Message) -> None:
    """–û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–æ–º–∞–Ω–¥—ã /support"""
    support_text = """
üí¨ <b>–¢–µ—Ö–Ω–∏—á–µ—Å–∫–∞—è –ø–æ–¥–¥–µ—Ä–∂–∫–∞</b>

–ï—Å–ª–∏ —É –≤–∞—Å –≤–æ–∑–Ω–∏–∫–ª–∏ –≤–æ–ø—Ä–æ—Å—ã –∏–ª–∏ –ø—Ä–æ–±–ª–µ–º—ã, –º—ã –ø–æ–º–æ–∂–µ–º!

<b>–°–ø–æ—Å–æ–±—ã —Å–≤—è–∑–∏:</b>
‚Ä¢ Telegram: @support
‚Ä¢ Email: support@onlinesim.com

<b>–í—Ä–µ–º—è —Ä–∞–±–æ—Ç—ã:</b> 24/7

<b>–ß–∞—Å—Ç—ã–µ –≤–æ–ø—Ä–æ—Å—ã:</b>
‚Ä¢ SMS –Ω–µ –ø—Ä–∏—Ö–æ–¥–∏—Ç - –∂–¥–∏—Ç–µ –¥–æ 15 –º–∏–Ω—É—Ç, –¥–µ–Ω—å–≥–∏ –≤–µ—Ä–Ω—É—Ç—Å—è –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏
‚Ä¢ –ü—Ä–æ–±–ª–µ–º—ã —Å –æ–ø–ª–∞—Ç–æ–π - –ø—Ä–æ–≤–µ—Ä—å—Ç–µ –±–∞–ª–∞–Ω—Å –∞–∫–∫–∞—É–Ω—Ç–∞
‚Ä¢ –ù–µ—Ç –Ω—É–∂–Ω–æ–π —Å—Ç—Ä–∞–Ω—ã - —Å–ª–µ–¥–∏—Ç–µ –∑–∞ –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è–º–∏ –≤ –∫–∞–Ω–∞–ª–µ

–ú—ã –æ—Ç–≤–µ—á–∞–µ–º –≤ —Ç–µ—á–µ–Ω–∏–µ –Ω–µ—Å–∫–æ–ª—å–∫–∏—Ö –º–∏–Ω—É—Ç! ‚ö°
    """
    
    keyboard = InlineKeyboardMarkup(
        inline_keyboard=[
            [
                InlineKeyboardButton(
                    text="üí¨ –ù–∞–ø–∏—Å–∞—Ç—å –≤ –ø–æ–¥–¥–µ—Ä–∂–∫—É",
                    url="https://t.me/support"
                )
            ],
            [
                InlineKeyboardButton(
                    text="üîô –ù–∞–∑–∞–¥",
                    callback_data="back_to_main"
                )
            ]
        ]
    )
    
    await message.answer(support_text, reply_markup=keyboard)

@router.callback_query(F.data == "info")
async def info_callback(callback_query) -> None:
    """–û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–Ω–æ–ø–∫–∏ "–ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è"""
    info_text = """
‚ÑπÔ∏è <b>–ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ–± OnlineSim</b>

<b>–ß—Ç–æ –º—ã –ø—Ä–µ–¥–ª–∞–≥–∞–µ–º:</b>
üîπ –í—Ä–µ–º–µ–Ω–Ω—ã–µ –Ω–æ–º–µ—Ä–∞ –¥–ª—è SMS –≤–µ—Ä–∏—Ñ–∏–∫–∞—Ü–∏–∏
üîπ –ü–æ–¥–¥–µ—Ä–∂–∫–∞ –ø–æ–ø—É–ª—è—Ä–Ω—ã—Ö —Å–µ—Ä–≤–∏—Å–æ–≤
üîπ –ù–æ–º–µ—Ä–∞ –∏–∑ —Ä–∞–∑–Ω—ã—Ö —Å—Ç—Ä–∞–Ω –º–∏—Ä–∞
üîπ –ë—ã—Å—Ç—Ä–∞—è –¥–æ—Å—Ç–∞–≤–∫–∞ SMS –∫–æ–¥–æ–≤

<b>–ü—Ä–µ–∏–º—É—â–µ—Å—Ç–≤–∞:</b>
‚úÖ –ù–∏–∑–∫–∏–µ —Ü–µ–Ω—ã
‚úÖ –í—ã—Å–æ–∫–∞—è —Å–∫–æ—Ä–æ—Å—Ç—å –ø–æ–ª—É—á–µ–Ω–∏—è SMS
‚úÖ –ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏–π –≤–æ–∑–≤—Ä–∞—Ç —Å—Ä–µ–¥—Å—Ç–≤
‚úÖ –ö—Ä—É–≥–ª–æ—Å—É—Ç–æ—á–Ω–∞—è –ø–æ–¥–¥–µ—Ä–∂–∫–∞
‚úÖ –ü—Ä–æ—Å—Ç–æ–π –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å

–í—ã–±–µ—Ä–∏—Ç–µ –∏–Ω—Ç–µ—Ä–µ—Å—É—é—â—É—é –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é:
    """
    
    await callback_query.message.edit_text(
        info_text,
        reply_markup=create_info_keyboard()
    )
    await callback_query.answer()

@router.callback_query(F.data == "how_to_use")
async def how_to_use_callback(callback_query) -> None:
    """–û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–Ω–æ–ø–∫–∏ "–ö–∞–∫ –ø–æ–ª—É—á–∏—Ç—å –Ω–æ–º–µ—Ä?"""
    instruction_text = """
üì± <b>–ü–æ—à–∞–≥–æ–≤–∞—è –∏–Ω—Å—Ç—Ä—É–∫—Ü–∏—è</b>

<b>1Ô∏è‚É£ –û—Ç–∫—Ä–æ–π—Ç–µ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ</b>
–ù–∞–∂–º–∏—Ç–µ –∫–Ω–æ–ø–∫—É "–û—Ç–∫—Ä—ã—Ç—å OnlineSim"

<b>2Ô∏è‚É£ –í—ã–±–µ—Ä–∏—Ç–µ —Å–µ—Ä–≤–∏—Å</b>
Telegram, WhatsApp, Discord –∏–ª–∏ –¥—Ä—É–≥–æ–π

<b>3Ô∏è‚É£ –í—ã–±–µ—Ä–∏—Ç–µ —Å—Ç—Ä–∞–Ω—É</b>
–†–æ—Å—Å–∏—è, –£–∫—Ä–∞–∏–Ω–∞, –ö–∞–∑–∞—Ö—Å—Ç–∞–Ω –∏ –¥—Ä.

<b>4Ô∏è‚É£ –ü–æ–ø–æ–ª–Ω–∏—Ç–µ –±–∞–ª–∞–Ω—Å</b>
–ï—Å–ª–∏ —Å—Ä–µ–¥—Å—Ç–≤ –Ω–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ

<b>5Ô∏è‚É£ –ó–∞–∫–∞–∑–∞—Ç—å –Ω–æ–º–µ—Ä</b>
–ù–∞–∂–º–∏—Ç–µ –∫–Ω–æ–ø–∫—É "–ö—É–ø–∏—Ç—å –Ω–æ–º–µ—Ä"

<b>6Ô∏è‚É£ –ü–æ–ª—É—á–∏—Ç–µ –Ω–æ–º–µ—Ä</b>
–ù–æ–º–µ—Ä –ø–æ—è–≤–∏—Ç—Å—è –≤ —Ä–∞–∑–¥–µ–ª–µ "–ù–æ–º–µ—Ä–∞"

<b>7Ô∏è‚É£ –ñ–¥–∏—Ç–µ SMS</b>
–î–æ 15 –º–∏–Ω—É—Ç, –∫–æ–¥ –ø–æ—è–≤–∏—Ç—Å—è –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏

<b>8Ô∏è‚É£ –ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ –∫–æ–¥</b>
–°–∫–æ–ø–∏—Ä—É–π—Ç–µ –∏ –≤—Å—Ç–∞–≤—å—Ç–µ –≤ –Ω—É–∂–Ω—ã–π —Å–µ—Ä–≤–∏—Å

‚ùó <b>–í–∞–∂–Ω–æ:</b> –ï—Å–ª–∏ SMS –Ω–µ –ø—Ä–∏—à–ª–æ –≤ —Ç–µ—á–µ–Ω–∏–µ 15 –º–∏–Ω—É—Ç, –¥–µ–Ω—å–≥–∏ –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ –≤–µ—Ä–Ω—É—Ç—Å—è –Ω–∞ –±–∞–ª–∞–Ω—Å.
    """
    
    keyboard = InlineKeyboardMarkup(
        inline_keyboard=[
            [
                InlineKeyboardButton(
                    text="üöÄ –ü–æ–ø—Ä–æ–±–æ–≤–∞—Ç—å —Å–µ–π—á–∞—Å",
                    web_app=WebAppInfo(url=WEBAPP_URL)
                )
            ],
            [
                InlineKeyboardButton(
                    text="üîô –ù–∞–∑–∞–¥",
                    callback_data="info"
                )
            ]
        ]
    )
    
    await callback_query.message.edit_text(
        instruction_text,
        reply_markup=keyboard
    )
    await callback_query.answer()

@router.callback_query(F.data == "prices")
async def prices_callback(callback_query) -> None:
    """–û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–Ω–æ–ø–∫–∏ "–¶–µ–Ω—ã"""
    prices_text = """
üí∞ <b>–¶–µ–Ω—ã –Ω–∞ –Ω–æ–º–µ—Ä–∞</b>

<b>üá∑üá∫ –†–æ—Å—Å–∏—è</b>
‚Ä¢ Telegram: –æ—Ç 15‚ÇΩ
‚Ä¢ WhatsApp: –æ—Ç 18‚ÇΩ
‚Ä¢ Discord: –æ—Ç 20‚ÇΩ

<b>üá∫üá¶ –£–∫—Ä–∞–∏–Ω–∞</b>
‚Ä¢ Telegram: –æ—Ç 22‚ÇΩ
‚Ä¢ WhatsApp: –æ—Ç 25‚ÇΩ
‚Ä¢ Discord: –æ—Ç 28‚ÇΩ

<b>üá∞üáø –ö–∞–∑–∞—Ö—Å—Ç–∞–Ω</b>
‚Ä¢ Telegram: –æ—Ç 18‚ÇΩ
‚Ä¢ WhatsApp: –æ—Ç 20‚ÇΩ
‚Ä¢ Discord: –æ—Ç 25‚ÇΩ

<b>üá∫üá∏ –°–®–ê</b>
‚Ä¢ Telegram: –æ—Ç 45‚ÇΩ
‚Ä¢ WhatsApp: –æ—Ç 50‚ÇΩ
‚Ä¢ Discord: –æ—Ç 55‚ÇΩ

üí° <b>–°–∫–∏–¥–∫–∏:</b>
‚Ä¢ –ü—Ä–∏ –ø–æ–ø–æ–ª–Ω–µ–Ω–∏–∏ –æ—Ç 500‚ÇΩ - —Å–∫–∏–¥–∫–∞ 5%
‚Ä¢ –ü–æ—Å—Ç–æ—è–Ω–Ω—ã–º –∫–ª–∏–µ–Ω—Ç–∞–º - –¥–æ 10%

–ê–∫—Ç—É–∞–ª—å–Ω—ã–µ —Ü–µ–Ω—ã —Å–º–æ—Ç—Ä–∏—Ç–µ –≤ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–∏!
    """
    
    keyboard = InlineKeyboardMarkup(
        inline_keyboard=[
            [
                InlineKeyboardButton(
                    text="üí≥ –ü–æ–ø–æ–ª–Ω–∏—Ç—å –±–∞–ª–∞–Ω—Å",
                    web_app=WebAppInfo(url=f"{WEBAPP_URL}?tab=profile")
                )
            ],
            [
                InlineKeyboardButton(
                    text="üîô –ù–∞–∑–∞–¥",
                    callback_data="info"
                )
            ]
        ]
    )
    
    await callback_query.message.edit_text(
        prices_text,
        reply_markup=keyboard
    )
    await callback_query.answer()

@router.callback_query(F.data == "countries")
async def countries_callback(callback_query) -> None:
    """–û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–Ω–æ–ø–∫–∏ "–°—Ç—Ä–∞–Ω—ã"""
    countries_text = """
üåç <b>–î–æ—Å—Ç—É–ø–Ω—ã–µ —Å—Ç—Ä–∞–Ω—ã</b>

<b>üü¢ –ê–∫—Ç–∏–≤–Ω—ã–µ (–º–Ω–æ–≥–æ –Ω–æ–º–µ—Ä–æ–≤):</b>
üá∑üá∫ –†–æ—Å—Å–∏—è - 1200+ –Ω–æ–º–µ—Ä–æ–≤
üá∫üá¶ –£–∫—Ä–∞–∏–Ω–∞ - 850+ –Ω–æ–º–µ—Ä–æ–≤

<b>üü° –û–≥—Ä–∞–Ω–∏—á–µ–Ω–Ω–æ (–º–∞–ª–æ –Ω–æ–º–µ—Ä–æ–≤):</b>
üá∞üáø –ö–∞–∑–∞—Ö—Å—Ç–∞–Ω - 15+ –Ω–æ–º–µ—Ä–æ–≤

<b>üî¥ –ù–µ–¥–æ—Å—Ç—É–ø–Ω—ã–µ:</b>
üá∫üá∏ –°–®–ê - –≤—Ä–µ–º–µ–Ω–Ω–æ –Ω–µ—Ç –Ω–æ–º–µ—Ä–æ–≤

<b>üîÑ –°–∫–æ—Ä–æ –¥–æ–±–∞–≤–∏–º:</b>
üáßüáæ –ë–µ–ª–∞—Ä—É—Å—å
üáµüá± –ü–æ–ª—å—à–∞
üá©üá™ –ì–µ—Ä–º–∞–Ω–∏—è

–°–ª–µ–¥–∏—Ç–µ –∑–∞ –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è–º–∏ –≤ –Ω–∞—à–µ–º –∫–∞–Ω–∞–ª–µ!
    """
    
    keyboard = InlineKeyboardMarkup(
        inline_keyboard=[
            [
                InlineKeyboardButton(
                    text="üì¢ –ö–∞–Ω–∞–ª —Å –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è–º–∏",
                    url="https://t.me/onlinesim_channel"
                )
            ],
            [
                InlineKeyboardButton(
                    text="üîô –ù–∞–∑–∞–¥",
                    callback_data="info"
                )
            ]
        ]
    )
    
    await callback_query.message.edit_text(
        countries_text,
        reply_markup=keyboard
    )
    await callback_query.answer()

@router.callback_query(F.data == "support")
async def support_callback(callback_query) -> None:
    """–û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–Ω–æ–ø–∫–∏ "–ü–æ–¥–¥–µ—Ä–∂–∫–∞"""
    await support_handler(callback_query.message)
    await callback_query.answer()

@router.callback_query(F.data == "back_to_main")
async def back_to_main_callback(callback_query) -> None:
    """–û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–Ω–æ–ø–∫–∏ "–ù–∞–∑–∞–¥ –≤ –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é"""
    welcome_text = """
üéâ <b>OnlineSim - –í—Ä–µ–º–µ–Ω–Ω—ã–µ –Ω–æ–º–µ—Ä–∞ —Ç–µ–ª–µ—Ñ–æ–Ω–æ–≤</b>

üì± <b>–ü–æ–ª—É—á–∞–π—Ç–µ SMS –∫–æ–¥—ã –±—ã—Å—Ç—Ä–æ –∏ –Ω–∞–¥–µ–∂–Ω–æ!</b>

üåü –ü–æ–¥–¥–µ—Ä–∂–∏–≤–∞–µ–º—ã–µ —Å–µ—Ä–≤–∏—Å—ã:
‚Ä¢ Telegram, WhatsApp, Discord
‚Ä¢ Instagram, Twitter, VKontakte
‚Ä¢ –ò –º–Ω–æ–≥–∏–µ –¥—Ä—É–≥–∏–µ...

üí∞ –¶–µ–Ω—ã –æ—Ç 15‚ÇΩ | ‚ö° SMS –∑–∞ 1-5 –º–∏–Ω—É—Ç | üîÑ –ê–≤—Ç–æ–≤–æ–∑–≤—Ä–∞—Ç —Å—Ä–µ–¥—Å—Ç–≤

–ù–∞–∂–º–∏—Ç–µ –∫–Ω–æ–ø–∫—É –Ω–∏–∂–µ, —á—Ç–æ–±—ã –Ω–∞—á–∞—Ç—å!
    """
    
    await callback_query.message.edit_text(
        welcome_text,
        reply_markup=create_main_keyboard()
    )
    await callback_query.answer()

# –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –≤—Å–µ—Ö –æ—Å—Ç–∞–ª—å–Ω—ã—Ö —Å–æ–æ–±—â–µ–Ω–∏–π
@router.message()
async def echo_handler(message: Message) -> None:
    """–û–±—Ä–∞–±–æ—Ç—á–∏–∫ –æ—Å—Ç–∞–ª—å–Ω—ã—Ö —Å–æ–æ–±—â–µ–Ω–∏–π"""
    await message.answer(
        "–ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ –∫–æ–º–∞–Ω–¥—ã /start –∏–ª–∏ /help –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏.",
        reply_markup=create_main_keyboard()
    )

# –†–µ–≥–∏—Å—Ç—Ä–∏—Ä—É–µ–º —Ä–æ—É—Ç–µ—Ä
dp.include_router(router)

async def main() -> None:
    """–ì–ª–∞–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è –∑–∞–ø—É—Å–∫–∞ –±–æ—Ç–∞"""
    logger.info("Starting OnlineSim Telegram Bot...")
    
    # –£–¥–∞–ª—è–µ–º webhook –µ—Å–ª–∏ –µ—Å—Ç—å
    await bot.delete_webhook(drop_pending_updates=True)
    
    # –ó–∞–ø—É—Å–∫–∞–µ–º –±–æ—Ç–∞
    await dp.start_polling(bot)

if __name__ == "__main__":
    asyncio.run(main())